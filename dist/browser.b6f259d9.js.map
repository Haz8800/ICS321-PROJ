{"version":3,"sources":["node_modules/@supabase/node-fetch/browser.js"],"names":["Object","defineProperty","exports","value","fetch","default","Response","Request","Headers","getGlobal","self","window","global","Error","globalObject","_default","bind"],"mappings":";AAAA,YAAY;;AAEZ;AAAAA,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,KAAA,GAAAF,OAAA,CAAAG,OAAA,GAAAH,OAAA,CAAAI,QAAA,GAAAJ,OAAA,CAAAK,OAAA,GAAAL,OAAA,CAAAM,OAAA;AACA,IAAIC,SAAS,GAAG,SAAAA,CAAA,EAAW;EACvB;EACA;EACA;EACA,IAAI,OAAOC,IAAI,KAAK,WAAW,EAAE;IAAE,OAAOA,IAAI;EAAE;EAChD,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IAAE,OAAOA,MAAM;EAAE;EACpD,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IAAE,OAAOA,MAAM;EAAE;EACpD,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;AACrD,CAAC;AAED,IAAIC,YAAY,GAAGL,SAAS,CAAC,CAAC;AAEvB,MAAML,KAAK,GAAAF,OAAA,CAAAE,KAAA,GAAGU,YAAY,CAACV,KAAK;AAAC,IAAAW,QAAA,GAAAb,OAAA,CAAAG,OAAA,GAEzBS,YAAY,CAACV,KAAK,CAACY,IAAI,CAACF,YAAY,CAAC;AAE7C,MAAMN,OAAO,GAAAN,OAAA,CAAAM,OAAA,GAAGM,YAAY,CAACN,OAAO;AACpC,MAAMD,OAAO,GAAAL,OAAA,CAAAK,OAAA,GAAGO,YAAY,CAACP,OAAO;AACpC,MAAMD,QAAQ,GAAAJ,OAAA,CAAAI,QAAA,GAAGQ,YAAY,CAACR,QAAQ","file":"browser.b6f259d9.js","sourceRoot":"..","sourcesContent":["\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function() {\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') { return self; }\n    if (typeof window !== 'undefined') { return window; }\n    if (typeof global !== 'undefined') { return global; }\n    throw new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nexport const fetch = globalObject.fetch;\n\nexport default globalObject.fetch.bind(globalObject);\n\nexport const Headers = globalObject.Headers;\nexport const Request = globalObject.Request;\nexport const Response = globalObject.Response;\n"]}